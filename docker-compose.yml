version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: travel-buddy-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: travel_buddy
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - travel-buddy-network

  # Redis for caching/sessions
  redis:
    image: redis:7-alpine
    container_name: travel-buddy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - travel-buddy-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: travel-buddy-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "5001:5001"
    volumes:
      - uploads_data:/app/public/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - travel-buddy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: travel-buddy-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5001
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - travel-buddy-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  travel-buddy-network:
    driver: bridge